%!PS-Adobe-2.0 EPSF-2.0
%%Title: emft.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Tue Jul 21 16:18:00 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (emft.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 21 16:18:00 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 4158 M
63 0 V
5696 0 R
-63 0 V
stroke
996 4158 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1080 4473 M
63 0 V
5696 0 R
-63 0 V
stroke
996 4473 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 4787 M
63 0 V
5696 0 R
-63 0 V
stroke
996 4787 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 4158 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 4158 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 4158 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 4158 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 4158 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 4158 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 4158 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 4158 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 4158 M
0 566 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 4158 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 4787 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
527 4472 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (S)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 112.0 -42.0 true true 0 (slow)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 4613 CircleF
.8 g 1286 4704 CircleF
.9429 g 1800 4281 CircleF
.8 g 1903 4683 CircleF
.6571 g 2006 4560 CircleF
.6 g 2108 4459 CircleF
.8857 g 2314 4656 CircleF
.7143 g 2417 4606 CircleF
.7714 g 2520 4693 CircleF
.8857 g 2623 4712 CircleF
.7714 g 2725 4407 CircleF
.7143 g 2828 4528 CircleF
.4857 g 2931 4559 CircleF
.4571 g 3034 4509 CircleF
.6571 g 3445 4643 CircleF
.8 g 3857 4165 CircleF
.7714 g 3960 4729 CircleF
.8286 g 4062 4675 CircleF
.8571 g 4165 4196 CircleF
.8571 g 4268 4718 CircleF
.8 g 4371 4711 CircleF
.8857 g 4474 4636 CircleF
.7714 g 4988 4700 CircleF
.4286 g 5091 4501 CircleF
.0571 g 5194 4530 CircleF
.8 g 5399 4681 CircleF
.8571 g 5502 4189 CircleF
.8 g 5605 4676 CircleF
.8857 g 5708 4225 CircleF
.9714 g 5811 4299 CircleF
.6286 g 6016 4620 CircleF
.7429 g 6119 4659 CircleF
.8286 g 6325 4743 CircleF
.8571 g 6530 4171 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 4787 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 4158 translate 287 629 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 4158 N
287 0 V
0 629 V
-287 0 V
0 -629 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 4158 M
-63 0 V
stroke
7354 4158 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4158 M
63 0 V
224 89 R
-63 0 V
stroke
7354 4247 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4247 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4337 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4337 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4427 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4427 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4517 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4517 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4607 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4607 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4697 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4697 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4787 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4787 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 3287 M
63 0 V
5696 0 R
-63 0 V
stroke
996 3287 M
[ [(Helvetica) 140.0 0.0 true true 0 (-16)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 3567 M
63 0 V
5696 0 R
-63 0 V
stroke
996 3567 M
[ [(Helvetica) 140.0 0.0 true true 0 (-12)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 3846 M
63 0 V
5696 0 R
-63 0 V
stroke
996 3846 M
[ [(Helvetica) 140.0 0.0 true true 0 (-8)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 3427 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 3427 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 3427 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 3427 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 3427 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 3427 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 3427 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 3427 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 3427 M
0 566 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 3427 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 4056 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
611 3741 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ /Symbol reencodeISO def
[(Symbol) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (slow)]
[(Helvetica) 140.0 0.0 true true 0 ( \(ns\))]
] -32.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 3723 CircleF
.8 g 1286 3619 CircleF
.9429 g 1800 3673 CircleF
.8 g 1903 3575 CircleF
.6571 g 2006 3707 CircleF
.6 g 2108 3616 CircleF
.8857 g 2314 3680 CircleF
.7143 g 2417 3697 CircleF
.7714 g 2520 3536 CircleF
.8857 g 2623 3599 CircleF
.7714 g 2725 3755 CircleF
.7143 g 2828 3712 CircleF
.4857 g 2931 3648 CircleF
.4571 g 3034 3742 CircleF
.6571 g 3445 3760 CircleF
.7143 g 3754 3732 CircleF
.8 g 3857 3965 CircleF
.7714 g 3960 3745 CircleF
.8286 g 4062 3730 CircleF
.8571 g 4165 3565 CircleF
.8571 g 4268 3638 CircleF
.8 g 4371 3721 CircleF
.8857 g 4474 3721 CircleF
.8 g 4577 3467 CircleF
.7714 g 4988 3679 CircleF
.4286 g 5091 3632 CircleF
.0571 g 5194 3693 CircleF
.8 g 5399 3644 CircleF
.8571 g 5502 3595 CircleF
.8 g 5605 3564 CircleF
.8857 g 5708 3530 CircleF
.9714 g 5811 3598 CircleF
.7429 g 5913 3671 CircleF
.6286 g 6016 3709 CircleF
.7429 g 6119 3538 CircleF
.7714 g 6222 4054 CircleF
.8286 g 6325 3588 CircleF
.7143 g 6428 3612 CircleF
.8571 g 6530 3483 CircleF
.8286 g 6633 3650 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 4056 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 3427 translate 287 629 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 3427 N
287 0 V
0 629 V
-287 0 V
0 -629 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 3427 M
-63 0 V
stroke
7354 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3427 M
63 0 V
224 89 R
-63 0 V
stroke
7354 3516 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3516 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3606 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3606 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3696 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3696 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3786 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3876 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3876 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3966 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3966 M
63 0 V
224 90 R
-63 0 V
stroke
7354 4056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 4056 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 2861 M
63 0 V
5696 0 R
-63 0 V
stroke
996 2861 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 3123 M
63 0 V
5696 0 R
-63 0 V
stroke
996 3123 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 3325 M
63 0 V
5696 0 R
-63 0 V
stroke
996 3325 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 2696 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 2696 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 2696 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 2696 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 2696 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 2696 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 2696 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 2696 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 2696 M
0 566 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 2696 M
0 63 V
0 566 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 3325 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
527 3010 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (S)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 112.0 -42.0 true true 0 (fast)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 3091 CircleF
.8 g 1286 3124 CircleF
.9429 g 1800 3315 CircleF
.8 g 1903 3130 CircleF
.6571 g 2006 3107 CircleF
.6 g 2108 3114 CircleF
.8857 g 2314 3173 CircleF
.7143 g 2417 3118 CircleF
.7714 g 2520 3115 CircleF
.8857 g 2623 3156 CircleF
.7714 g 2725 3205 CircleF
.7143 g 2828 3142 CircleF
.4857 g 2931 3030 CircleF
.4571 g 3034 3032 CircleF
.6571 g 3445 3082 CircleF
.7143 g 3754 3305 CircleF
.8 g 3857 3300 CircleF
.7714 g 3960 3105 CircleF
.8286 g 4062 3144 CircleF
.8571 g 4165 3311 CircleF
.8571 g 4268 3143 CircleF
.8 g 4371 3122 CircleF
.8857 g 4474 3178 CircleF
.8 g 4577 3312 CircleF
.7714 g 4988 3113 CircleF
.4286 g 5091 3021 CircleF
.0571 g 5194 2809 CircleF
.8 g 5399 3131 CircleF
.8571 g 5502 3314 CircleF
.8 g 5605 3132 CircleF
.8857 g 5708 3312 CircleF
.9714 g 5811 3320 CircleF
.7429 g 5913 3319 CircleF
.6286 g 6016 3077 CircleF
.7429 g 6119 3114 CircleF
.7714 g 6222 3301 CircleF
.8286 g 6325 3124 CircleF
.7143 g 6428 3313 CircleF
.8571 g 6530 3320 CircleF
.8286 g 6633 3323 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 3325 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 2696 translate 287 629 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 2696 N
287 0 V
0 629 V
-287 0 V
0 -629 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 2696 M
-63 0 V
stroke
7354 2696 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2696 M
63 0 V
224 89 R
-63 0 V
stroke
7354 2785 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2785 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2875 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2875 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2965 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2965 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3055 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3145 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3145 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3235 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3235 M
63 0 V
224 90 R
-63 0 V
stroke
7354 3325 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 3325 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 1755 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1755 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 2035 M
63 0 V
5696 0 R
-63 0 V
stroke
996 2035 M
[ [(Helvetica) 140.0 0.0 true true 0 (-16)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 2315 M
63 0 V
5696 0 R
-63 0 V
stroke
996 2315 M
[ [(Helvetica) 140.0 0.0 true true 0 (-12)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 1965 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 1965 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 1965 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 1965 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 1965 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 1965 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 1965 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 1965 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 1965 M
0 567 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 1965 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 2595 N
0 -630 V
5759 0 V
0 630 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
611 2280 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (fast)]
[(Helvetica) 140.0 0.0 true true 0 ( \(ps\))]
] -32.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 2327 CircleF
.8 g 1286 2335 CircleF
.9429 g 1800 2238 CircleF
.8 g 1903 2308 CircleF
.6571 g 2006 2173 CircleF
.6 g 2108 2107 CircleF
.8857 g 2314 2175 CircleF
.7143 g 2417 2364 CircleF
.7714 g 2520 2165 CircleF
.8857 g 2623 2348 CircleF
.7714 g 2725 2282 CircleF
.7143 g 2828 2277 CircleF
.4857 g 2931 2279 CircleF
.4571 g 3034 2241 CircleF
.6571 g 3445 2213 CircleF
.7143 g 3754 2274 CircleF
.8 g 3857 2529 CircleF
.7714 g 3960 2360 CircleF
.8286 g 4062 2338 CircleF
.8571 g 4165 2300 CircleF
.8571 g 4268 2241 CircleF
.8 g 4371 2208 CircleF
.8857 g 4474 2470 CircleF
.8 g 4577 2164 CircleF
.7714 g 4988 2271 CircleF
.4286 g 5091 2124 CircleF
.0571 g 5194 2271 CircleF
.8 g 5399 2326 CircleF
.8571 g 5502 2194 CircleF
.8 g 5605 1987 CircleF
.8857 g 5708 2269 CircleF
.9714 g 5811 2241 CircleF
.7429 g 5913 2411 CircleF
.6286 g 6016 2216 CircleF
.7429 g 6119 2062 CircleF
.7714 g 6222 2552 CircleF
.8286 g 6325 2287 CircleF
.7143 g 6428 2201 CircleF
.8571 g 6530 2163 CircleF
.8286 g 6633 2376 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 2595 N
0 -630 V
5759 0 V
0 630 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 1965 translate 287 630 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 1965 N
287 0 V
0 630 V
-287 0 V
0 -630 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 1965 M
-63 0 V
stroke
7354 1965 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1965 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2055 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2055 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2145 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2145 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2235 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2235 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2325 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2325 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2415 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2415 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2505 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2505 M
63 0 V
224 90 R
-63 0 V
stroke
7354 2595 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 2595 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 1234 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1234 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 1444 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1444 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 1654 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1654 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 1864 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1864 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 1234 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 1234 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 1234 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 1234 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 1234 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 1234 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 1234 M
0 630 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 1234 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 1234 M
0 567 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 1234 M
0 63 V
0 567 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 1864 N
0 -630 V
5759 0 V
0 630 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
695 1549 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Ea)]
[(Helvetica) 112.0 -42.0 true true 0 (slow)]
[(Helvetica) 140.0 0.0 true true 0 ( / kJ/mol)]
] -32.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 1345 CircleF
.8 g 1286 1447 CircleF
.9429 g 1800 1235 CircleF
.8 g 1903 1485 CircleF
.6571 g 2006 1366 CircleF
.6 g 2108 1448 CircleF
.8857 g 2314 1403 CircleF
.7143 g 2417 1389 CircleF
.7714 g 2520 1517 CircleF
.8857 g 2623 1468 CircleF
.7714 g 2725 1335 CircleF
.7143 g 2828 1369 CircleF
.4857 g 2931 1413 CircleF
.4571 g 3034 1340 CircleF
.6571 g 3445 1325 CircleF
.7143 g 3754 1667 CircleF
.8 g 3857 1779 CircleF
.7714 g 3960 1354 CircleF
.8286 g 4062 1356 CircleF
.8571 g 4165 1303 CircleF
.8571 g 4268 1428 CircleF
.8 g 4371 1360 CircleF
.8857 g 4474 1361 CircleF
.8 g 4577 1395 CircleF
.7714 g 4988 1395 CircleF
.4286 g 5091 1421 CircleF
.0571 g 5194 1383 CircleF
.8 g 5399 1427 CircleF
.8571 g 5502 1277 CircleF
.8 g 5605 1511 CircleF
.8857 g 5708 1341 CircleF
.9714 g 5811 1300 CircleF
.7429 g 5913 1237 CircleF
.6286 g 6016 1365 CircleF
.7429 g 6119 1506 CircleF
.7714 g 6222 1805 CircleF
.8286 g 6325 1491 CircleF
.7143 g 6428 1243 CircleF
.8571 g 6530 1370 CircleF
.8286 g 6633 1237 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 1864 N
0 -630 V
5759 0 V
0 630 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 1234 translate 287 630 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 1234 N
287 0 V
0 630 V
-287 0 V
0 -630 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 1234 M
-63 0 V
stroke
7354 1234 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1234 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1324 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1324 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1414 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1414 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1504 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1504 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1594 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1594 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1684 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1684 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1774 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1774 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1864 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1864 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1080 504 M
63 0 V
5696 0 R
-63 0 V
stroke
996 504 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 714 M
63 0 V
5696 0 R
-63 0 V
stroke
996 714 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 923 M
63 0 V
5696 0 R
-63 0 V
stroke
996 923 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 1133 M
63 0 V
5696 0 R
-63 0 V
stroke
996 1133 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 504 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 504 M
0 63 V
0 566 R
0 -63 V
stroke
2108 364 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3137 504 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3137 504 M
0 63 V
0 566 R
0 -63 V
stroke
3137 364 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4165 504 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4165 504 M
0 63 V
0 566 R
0 -63 V
stroke
4165 364 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5194 504 M
0 629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5194 504 M
0 63 V
0 566 R
0 -63 V
stroke
5194 364 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6222 504 M
0 566 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6222 504 M
0 63 V
0 566 R
0 -63 V
stroke
6222 364 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 1133 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
695 818 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Ea)]
[(Helvetica) 112.0 -42.0 true true 0 (fast)]
[(Helvetica) 140.0 0.0 true true 0 ( / kJ/mol)]
] -32.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3959 154 M
[ [(Helvetica) 140.0 0.0 true true 0 (Peptide plane number \()]
[(Helvetica) 112.0 70.0 true true 0 (15)]
[(Helvetica) 140.0 0.0 true true 0 (N)]
[(Helvetica) 112.0 -42.0 true true 0 (i)]
[(Helvetica) 140.0 0.0 true true 0 (\))]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0 g .6571 g 1183 560 CircleF
.8 g 1286 566 CircleF
.9429 g 1800 844 CircleF
.8 g 1903 592 CircleF
.6571 g 2006 704 CircleF
.6 g 2108 767 CircleF
.8857 g 2314 697 CircleF
.7143 g 2417 546 CircleF
.7714 g 2520 694 CircleF
.8857 g 2623 562 CircleF
.7714 g 2725 631 CircleF
.7143 g 2828 609 CircleF
.4857 g 2931 624 CircleF
.4571 g 3034 636 CircleF
.6571 g 3445 658 CircleF
.7143 g 3754 774 CircleF
.8 g 3857 575 CircleF
.7714 g 3960 538 CircleF
.8286 g 4062 550 CircleF
.8571 g 4165 773 CircleF
.8571 g 4268 628 CircleF
.8 g 4371 645 CircleF
.8857 g 4474 1110 CircleF
.8 g 4577 885 CircleF
.7714 g 4988 629 CircleF
.4286 g 5091 769 CircleF
.0571 g 5194 665 CircleF
.8 g 5399 569 CircleF
.8571 g 5502 907 CircleF
.8 g 5605 813 CircleF
.8857 g 5708 809 CircleF
.9714 g 5811 863 CircleF
.7429 g 5913 724 CircleF
.6286 g 6016 663 CircleF
.7429 g 6119 777 CircleF
.7714 g 6222 556 CircleF
.8286 g 6325 577 CircleF
.7143 g 6428 897 CircleF
.8571 g 6530 969 CircleF
.8286 g 6633 757 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 1133 N
0 -629 V
5759 0 V
0 629 V
-5759 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6983 504 translate 287 629 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6983 504 N
287 0 V
0 629 V
-287 0 V
0 -629 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
7270 504 M
-63 0 V
stroke
7354 504 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 504 M
63 0 V
224 89 R
-63 0 V
stroke
7354 593 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 593 M
63 0 V
224 90 R
-63 0 V
stroke
7354 683 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 683 M
63 0 V
224 90 R
-63 0 V
stroke
7354 773 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 773 M
63 0 V
224 90 R
-63 0 V
stroke
7354 863 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 863 M
63 0 V
224 90 R
-63 0 V
stroke
7354 953 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 953 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1043 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1043 M
63 0 V
224 90 R
-63 0 V
stroke
7354 1133 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 1133 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
